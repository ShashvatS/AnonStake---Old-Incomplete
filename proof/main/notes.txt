RUST code: 

    let arr = [Fr::zero(), Fr::zero()];
    let ptr = &arr[0] as *const _;
    let ptr2 = &arr[1] as *const _;
    unsafe {
        let mut p = ptr as *mut u64;
        *p = 1;
        *p.offset(1) = 1;
        *p.offset(2) = 1;
        *p.offset(3) = 1;
    }
    println!("hello world!");
    println!("{:p}", ptr);
    println!("{:p}", ptr2);
    println!("{}", arr[0]);
    println!("{:?}", std::mem::size_of::<Fr>());

result is 
Fr(0x4c938ddf61e91c6469533b7c48f5ce94733e0f7cb18e636442a008df26b35003)

C++ code:
    FieldR a;
    mp_limb_t *p = (mp_limb_t*)&a;
    *p++ = 1;
    *p++ = 1;
    *p++ = 1;
    *p++ = 1;

    std::cout << sizeof(a) << "\n\n";
    a.print();
    std::cout << a << '\n';

result:
34636482179464860813780068155870141699653355620957161880073159210196855377923


in hex:
     4c938ddf61e91c6469533b7c48f5ce94733e0f7cb18e636442a008df26b35003
Fr(0x4c938ddf61e91c6469533b7c48f5ce94733e0f7cb18e636442a008df26b35003)

results match!
huzzah!!!







